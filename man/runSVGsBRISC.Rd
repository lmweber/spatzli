% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runSVGsBRISC.R
\name{runSVGsBRISC}
\alias{runSVGsBRISC}
\title{runSVGsBRISC}
\usage{
runSVGsBRISC(spe, x = NULL, n_threads = 1, verbose = FALSE)
}
\arguments{
\item{spe}{\code{SpatialExperiment} Input object, assumed to be a
\code{SpatialExperiment} containing an assay named \code{logcounts} and
spatial coordinates accessible with \code{spatialCoords()}.}

\item{x}{\code{numeric matrix} Matrix of covariates, with number of rows
(spots) matching the number of columns (spots) in \code{spe}. Default =
NULL, which specifies an intercept-only model. See \code{BRISC}
documentation for details.}

\item{n_threads}{\code{integer} Number of threads for parallelization.
Default = 1.}

\item{verbose}{\code{logical} Whether to display verbose output from
\code{BRISC}. Default = FALSE.}
}
\value{
Returns output values stored as new columns in \code{rowData} in the
  \code{spe} \code{SpatialExperiment} object.
}
\description{
Run method to identify spatially variable genes (SVGs) using BRISC.
}
\details{
Run method to identify spatially variable genes (SVGs) using BRISC
("bootstrap for rapid inference on spatial covariances") methodology (Saha
and Datta 2018).

This function runs BRISC separately for each gene, using parallelization for
faster runtime using one core per BRISC run. The main outputs of interest are
the covariance parameter estimates stored in 'Theta' in the BRISC output
(sigma.sq, tau.sq, phi). We use these estimates to perform inference on the
'sigma.sq' parameter, and to calculate an effect size estimate defined as the
proportion of spatial variance out of total variance, 'prop_sv' = 'sigma.sq /
(sigma.sq + tau.sq)'.

Significant SVGs can then be identified as those with a highly significant
p-value from 'sigma.sq' and large effect size 'prop_sv'.

Assumes the input object is a \code{SpatialExperiment} containing an assay
named \code{logcounts}, which has been filtered to exclude very low-expressed
genes, e.g. as prepared with \code{\link{preprocessSVGs}}.
}
\examples{
library(SpatialExperiment)
library(STexampleData)
library(spatzli)

spe <- Visium_humanDLPFC()

spe <- preprocessSVGs(spe)

# subset 1 gene
spe_1 <- spe[1, ]
system.time({
  spe_1 <- runSVGsBRISC(spe_1, verbose = TRUE)
})

# subset 100 genes and use parallelization
# spe_100 <- spe[1:100, ]
# spe_100 <- runSVGsBRISC(spe_100, n_threads = 4)

}
